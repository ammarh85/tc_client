/**
 * Travel Conseriage
 * API for managing Travel Conceriage Service datasets.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: ammar.haris@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Agency'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/Agency'));
  } else {
    // Browser globals (root is window)
    if (!root.TravelConseriage) {
      root.TravelConseriage = {};
    }
    root.TravelConseriage.AgencyApi = factory(root.TravelConseriage.ApiClient, root.TravelConseriage.Agency);
  }
}(this, function(ApiClient, Agency) {
  'use strict';

  /**
   * Agency service.
   * @module api/AgencyApi
   * @version 1.0.0
   */

  /**
   * Constructs a new AgencyApi. 
   * @alias module:api/AgencyApi
   * @class
   * @param {module:ApiClient} apiClient Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the createAgency operation.
     * @callback module:api/AgencyApi~createAgencyCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Agency
     * This can only be done by the logged in user.
     * @param {module:model/Agency} body Created Agency object
     * @param {module:api/AgencyApi~createAgencyCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.createAgency = function(body, callback) {
      var postBody = body;

      // verify the required parameter 'body' is set
      if (body == undefined || body == null) {
        throw new Error("Missing the required parameter 'body' when calling createAgency");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/xml', 'application/json'];
      var returnType = null;

      return this.apiClient.callApi(
        '/agency', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getAgencies operation.
     * @callback module:api/AgencyApi~getAgenciesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Agency>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns all agencies in the system
     * Returns list of all Agencies
     * @param {module:api/AgencyApi~getAgenciesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Agency>}
     */
    this.getAgencies = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = [Agency];

      return this.apiClient.callApi(
        '/agency/getAgency', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getAgencyById operation.
     * @callback module:api/AgencyApi~getAgencyByIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Agency} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns an Agency for a given id
     * Returns agency object
     * @param {String} agencyId The id of the agency
     * @param {module:api/AgencyApi~getAgencyByIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Agency}
     */
    this.getAgencyById = function(agencyId, callback) {
      var postBody = null;

      // verify the required parameter 'agencyId' is set
      if (agencyId == undefined || agencyId == null) {
        throw new Error("Missing the required parameter 'agencyId' when calling getAgencyById");
      }


      var pathParams = {
      };
      var queryParams = {
        'agencyId': agencyId
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['api_key'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = Agency;

      return this.apiClient.callApi(
        '/agency/getAgencyById', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
